<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SqlQueryMain" xml:space="preserve">
    <value>/*changelog:
ver 0.03
1)	Исправлена ошибка при которой в некоторых ситуациях не отображалась инфо о докторе
2)	Должность врача в настоящей версии берется из справочника
3)	Удалён рейтинг врача
ver 0.02
1)	Приглашение на приём - возвращается только имя + отчество
2)	Добавлен рейтинг врача - поле DSINFO 4 колонка
3)	Исправлена ошибка, когда при статусе «Идёт приём» в поле timeleft отображалось 0 мин.
*/ --ver 0.03
WITH a AS (
SELECT chid,
       x.rnum,
       CASE
           WHEN x.starttreat=1
                AND x.isdelay=1 THEN 10 --'Приём задерживается'

           WHEN x.starttreat=1
                AND x.isdelay=0 THEN 20 --'Идёт приём'

           WHEN x.starttreat=0
                AND x.actual=1
                AND x.sortactual=1 THEN 30 --'Пройдите на приём'

           WHEN x.starttreat=0
                AND x.actual=1
                AND x.sortactual=0 THEN 31 --'Пройдите на приём'

           WHEN x.DSINFO IS NOT NULL THEN 40 --'Кабинет свободен'

           ELSE 50 --'Нет приёма'

       END status,
       iif(x.starttreat=0
           AND x.actual=1,
             (SELECT firstname||' '||midname
              FROM clients
              WHERE pcode=x.pcode),NULL) acfullname /*при 'Пройдите на приём'*/ ,
       iif(x.starttreat=1
           AND x.isdelay=0
           AND et-ct&lt;et-st, et-ct-1, NULL) timeleft /*при 'Идёт приём'*/ ,
       x.DSINFO
FROM (
SELECT c.chid,
       c.ct,
       s.st,
       s.et,
       s.pcode,
       c.rnum,
       iif(c.ct-st&gt;

=0
AND c.ct-et&lt;0,
    1,
    0) SORTACTUAL,
       iif(c.ct-st&gt;

=-5
AND c.ct-et&lt;0,
    1,
    0) ACTUAL /*ACTUAL (c.ct-st&gt;=_ приглашать за _ мин до начала приема, c.ct-et&lt;_ мин после конца приёма) !изменяются синхронно! */ ,
       iif(s.starttreat IS NULL, 0, 1) starttreat,
       iif(s.et&lt;=c.ct+1, 1, 0) isdelay,

  (SELECT list(d.fullname, '@') ||'|'|| list(profname, '@') ||'|'|| list(depname, '@') ||'|'|| lpad(cast(min(beghour||':'||begmin) AS TIME), 5)||' - '||lpad(cast(min(endhour||':'||endmin) AS TIME), 5) INFO
   FROM doctshedule ds
   JOIN doctor d ON d.dcode=ds.dcode
   JOIN departments dp ON dp.depnum=d.depnum
   JOIN profession p ON p.profid=d.profid
   WHERE ds.chair=c.chid
     AND ds.wdate=CURRENT_DATE
     AND (beghour*60+begmin)-5&lt;=c.ct /*(beghour*60+begmin)-5 (приглашать за 5 мин до начала приема)*/
     AND (endhour*60+endmin)&gt;c.ct ) DSINFO
FROM
  (SELECT id chid,

     (SELECT r.rnum
      FROM chairs ch
      JOIN
        (SELECT rid,
                rnum
         FROM rooms) r ON r.rid=ch.rid
      WHERE ch.chid=id) rnum,
          extract(hour
                  FROM CURRENT_TIME)*60+extract(MINUTE
                                                FROM CURRENT_TIME) ct
   FROM mrgetlist(@chairList)) c
LEFT JOIN
  (SELECT bhour*60+bmin ST,
          fhour*60+fmin ET,
          s1.*
   FROM schedule s1) s ON s.chid=c.chid
AND s.workdate=CURRENT_DATE
AND s.pcode&lt;&gt;-1
AND s.finishtreat IS NULL
AND s.clvisit=1 ) x ) /*-------------------END WITH-------------------*/
SELECT a.chid,
       a.rnum,
       a.status,
       a.acfullname,
       a.timeleft,
       a.dsinfo
FROM a
JOIN
  (SELECT chid,
          min(status) status
   FROM a
   GROUP BY 1) srt ON srt.chid=a.chid
AND srt.status=a.status
GROUP BY 1,
         2,
         3,
         4,
         5,
         6</value>
  </data>
  <data name="SqlQueryTimetable" xml:space="preserve">
    <value />
  </data>
</root>