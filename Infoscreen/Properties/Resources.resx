<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SqlQueryMain" xml:space="preserve">
    <value>/*changelog:
ver 1.00
1)  Исправлено: запрос возвращал ошибку в случае, если врач работает до 0:00
2)  Добавлен статус 21 "Идет прием" для устранения случаев, когда запрос возвращал несколько строк со статусом 20. Это происходило, если врач вручную снимал
    отметку о завершении приема с последующих по времени приемов.
ver 0.03
1)            Исправлена ошибка при которой в некоторых ситуациях не отображалась инфо о докторе
2)            Должность врача в настоящей версии берется из справочника
3)            Удалён рейтинг врача
ver 0.02
1)            Приглашение на приём – возвращается только имя + отчество
2)            Добавлен рейтинг врача – поле DSINFO 4 колонка
3)            Исправлена ошибка, когда при статусе «Идёт приём» в поле timeleft отображалось 0 мин.
*/
--ver 0.03

with a as
  (select chid
          ,x.rnum
          ,CASE WHEN x.starttreat=1 and x.isdelay=1 THEN 10 --'Приём задерживается'
                WHEN x.starttreat=1 and x.isdelay=0 and et-ct&lt;et-st THEN 20 --'Идёт приём'
                WHEN x.starttreat=1 and x.isdelay=0 THEN 21 --'Идёт приём'
                WHEN x.starttreat=0 and x.actual=1 and x.sortactual=1 THEN 30 --'Пройдите на приём'
                WHEN x.starttreat=0 and x.actual=1 and x.sortactual=0 THEN 31 --'Пройдите на приём'
                WHEN x.DSINFO is not null THEN 40 --'Кабинет свободен'
                ELSE 50 --'Нет приёма'
           END status
          ,iif(x.starttreat=0 and x.actual=1,(select firstname||' '||midname from clients where pcode=x.pcode),null) acfullname /*при 'Пройдите на приём'*/
          ,iif(x.starttreat=1 and x.isdelay=0 and et-ct&lt;et-st,et-ct-1,null) timeleft /*при 'Идёт приём'*/
          ,x.DSINFO

   from (select c.chid
                ,c.ct
                ,s.st
                ,s.et
                ,s.pcode
                ,c.rnum
                ,iif(c.ct-st&gt;=0 and c.ct-et&lt;0,1,0) SORTACTUAL
                ,iif(c.ct-st&gt;=-5 and c.ct-et&lt;0,1,0) ACTUAL
                /*ACTUAL (c.ct-st&gt;=_ приглашать за _ мин до начала приема, c.ct-et&lt;_ мин после конца приёма) !изменяются синхронно! */
                ,iif(s.starttreat is null,0,1) starttreat
                ,iif(s.et&lt;=c.ct+1,1,0) isdelay
                ,(select list(d.fullname,', ') ||'|'||
                         list(profname,', ') ||'|'||
                         list(depname,', ') ||'|'||
                         lpad(dateadd(minute,min(beghour*60+begmin),cast('00:00' as time)),5)||' - '||lpad(dateadd(minute,min(endhour*60+endmin),cast('00:00' as time)),5) INFO
                  from doctshedule ds
                  join doctor d on d.dcode=ds.dcode
                  join departments dp on dp.depnum=d.depnum
                  join profession p on p.profid=d.profid
                  where ds.chair=c.chid
                        and ds.wdate=current_date
                        and (beghour*60+begmin)-5&lt;=c.ct /*(beghour*60+begmin)-5 (приглашать за 5 мин до начала приема)*/
                        and (endhour*60+endmin)&gt;c.ct
                 ) DSINFO

         from (select id chid
                      ,(select r.rnum from chairs ch join (select rid,rnum from rooms) r on r.rid=ch.rid where ch.chid=id) rnum
                      ,extract(hour from current_time)*60+extract(minute from current_time) ct
               from mrgetlist(@chairList)
              ) c
         left join (select bhour*60+bmin ST
                           , fhour*60+fmin ET
                           , s1.*
                    from schedule s1) s on s.chid=c.chid
                                        and s.workdate=current_date
                                        and s.pcode&lt;&gt;-1
                                        and s.finishtreat is null
                                        and s.clvisit=1
        ) x
  )
/*-------------------END WITH-------------------*/
select distinct a.chid,a.rnum,a.status,a.acfullname,a.timeleft,a.dsinfo
from a
join (select chid
             , min(status) status
      from a
     group by 1) srt on srt.chid=a.chid
                         and srt.status=a.status</value>
  </data>
  <data name="SqlQueryTimetable" xml:space="preserve">
    <value>-- ver 1.0
select depname,fullname,d0,d1,d2,d3,d4,d5,d6
from
(
select
    upper(dp.depname) depname
  , d.fullname
  , ds.depnum
  , ds.dcode
  , (select lpad(dateadd(minute,min(ds0.beghour*60+ds0.begmin),cast('00:00' as time)),5)||' - '||lpad(dateadd(minute,max(ds0.endhour*60+ds0.endmin),cast('00:00' as time)),5) from doctshedule ds0
     where ds0.depnum=ds.depnum and ds0.dcode=ds.dcode and ds0.wdate=dateadd(day,0,current_date)) d0
  , (select lpad(dateadd(minute,min(ds0.beghour*60+ds0.begmin),cast('00:00' as time)),5)||' - '||lpad(dateadd(minute,max(ds0.endhour*60+ds0.endmin),cast('00:00' as time)),5) from doctshedule ds0
     where ds0.depnum=ds.depnum and ds0.dcode=ds.dcode and ds0.wdate=dateadd(day,1,current_date)) d1
  , (select lpad(dateadd(minute,min(ds0.beghour*60+ds0.begmin),cast('00:00' as time)),5)||' - '||lpad(dateadd(minute,max(ds0.endhour*60+ds0.endmin),cast('00:00' as time)),5) from doctshedule ds0
     where ds0.depnum=ds.depnum and ds0.dcode=ds.dcode and ds0.wdate=dateadd(day,2,current_date)) d2
  , (select lpad(dateadd(minute,min(ds0.beghour*60+ds0.begmin),cast('00:00' as time)),5)||' - '||lpad(dateadd(minute,max(ds0.endhour*60+ds0.endmin),cast('00:00' as time)),5) from doctshedule ds0
     where ds0.depnum=ds.depnum and ds0.dcode=ds.dcode and ds0.wdate=dateadd(day,3,current_date)) d3
  , (select lpad(dateadd(minute,min(ds0.beghour*60+ds0.begmin),cast('00:00' as time)),5)||' - '||lpad(dateadd(minute,max(ds0.endhour*60+ds0.endmin),cast('00:00' as time)),5) from doctshedule ds0
     where ds0.depnum=ds.depnum and ds0.dcode=ds.dcode and ds0.wdate=dateadd(day,4,current_date)) d4
  , (select lpad(dateadd(minute,min(ds0.beghour*60+ds0.begmin),cast('00:00' as time)),5)||' - '||lpad(dateadd(minute,max(ds0.endhour*60+ds0.endmin),cast('00:00' as time)),5) from doctshedule ds0
     where ds0.depnum=ds.depnum and ds0.dcode=ds.dcode and ds0.wdate=dateadd(day,5,current_date)) d5
  , (select lpad(dateadd(minute,min(ds0.beghour*60+ds0.begmin),cast('00:00' as time)),5)||' - '||lpad(dateadd(minute,max(ds0.endhour*60+ds0.endmin),cast('00:00' as time)),5) from doctshedule ds0
     where ds0.depnum=ds.depnum and ds0.dcode=ds.dcode and ds0.wdate=dateadd(day,6,current_date)) d6
from
  doctshedule ds
  , (select outdate from getdate(current_date,dateadd(day,6,current_date))) x
  , departments dp
  , doctor d
where
  x.outdate = ds.wdate
  and ds.depnum = dp.depnum
  and ds.dcode = d.dcode

  and ds.depnum is not null
  and coalesce(ds.CHAIR,-1) &lt;&gt; -1

  -- Исключения --
  and ds.depnum+0 not in
  (
  991325710, --ВРАЧИ ОФИСА
  992112048, --КАБИНЕТЫ ДРС
  991317990, --ЛИЧНЫЙ ВРАЧ
  991306861, --МАССАЖ НА ДОМУ
  990386480, --ОБЩЕЕ
  992120358, --ОБЩЕЕ ПЕДИАТРИЯ
  991491433, --ОТДЕЛЕНИЕ ЛВ
  990833277, --ОТДЕЛЕНИЕ ПНД
  10029098,  --ПОМОЩЬ НА ДОМУ
  991330975, --ПРЕДРЕЙСОВЫЙ ОСМОТР
  821,       --ПРОЦЕДУРНЫЙ
  991382360, --ПРОЦЕДУРНЫЙ (ДЕТСКИЙ)
  991330843, --СКОРАЯ МЕДИЦИНСКАЯ ПОМОЩЬ
  992092102, --ТЕЛЕМЕДИЦИНА
  991135669 --УЗКИЕ СПЕЦИАЛИСТЫ НА ДОМУ
  )
group by 1,2,3,4
)</value>
  </data>
</root>